zstyle :compinstall filename '/Users/sanderginn/.zshrc'
autoload -Uz compinit
compinit

# Add brew to path
export PATH="/opt/homebrew/bin:$PATH"

DEFAULT_USER="sander"
source ~/.aliases
source ~/.functions

[ -f $(brew --prefix)/etc/profile.d/autojump.sh ] && . $(brew --prefix)/etc/profile.d/autojump.sh

# Autocomplete
source <(kubectl completion zsh)

# set maven's java version to 8
export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home

# set Go path
export PATH=$(go env GOPATH)/bin:$PATH
export GOBIN=$(go env GOPATH)/bin

export NVM_DIR="$HOME/.nvm"
  [ -s "$(brew --prefix)/opt/nvm/nvm.sh" ] && . "$(brew --prefix)/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm" ] && . "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# use Sublime as 'kubectl edit' editor
export KUBE_EDITOR="$(brew --prefix)/bin/subl -w"
#export PATH="$(brew --prefix)/opt/postgresql@11/bin:$PATH"

# gcloud doesn't work with python >= 3.12 at the moment
export CLOUDSDK_PYTHON="$(brew --prefix)/bin/python3.11"

# autocomplete for gcloud
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

# enable chruby
source /opt/homebrew/opt/chruby/share/chruby/chruby.sh

# add sg to path
export PATH="$HOME/.sg:$PATH"

# add gcloud to path
source /opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc

. $(brew --prefix asdf)/libexec/asdf.sh
compinit

# kubectl gcloud auth
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Everything below allows JH to hack me

autoload colors && colors
# cheers, @ehrenmurdick
# http://github.com/ehrenmurdick/config/blob/master/zsh/prompt.zsh

if (( $+commands[git] ))
then
  git="$commands[git]"
else
  git="/usr/bin/git"
fi

git_branch() {
  echo $($git symbolic-ref HEAD 2>/dev/null | awk -F/ {'print $NF'})
}

git_dirty() {
  if $(! $git status -s &> /dev/null)
  then
    echo ""
  else
    if [[ $($git status --porcelain) == "" ]]
    then
      echo " %{$fg_bold[green]%}$(git_prompt_info)%{$reset_color%}"
    else
      echo " %{$fg_bold[red]%}$(git_prompt_info)%{$reset_color%}"
    fi
  fi
}

git_prompt_info () {
 ref=$($git symbolic-ref HEAD 2>/dev/null) || return
# echo "(%{\e[0;33m%}${ref#refs/heads/}%{\e[0m%})"
 echo "${ref#refs/heads/}"
}

unpushed () {
  $git cherry -v @{upstream} 2>/dev/null
}

need_push () {
  if [[ $(unpushed) == "" ]]
  then
    echo " "
  else
    echo " with %{$fg_bold[magenta]%}unpushed%{$reset_color%} "
  fi
}

directory_name() {
  echo "%{$fg_bold[cyan]%}%~%{$reset_color%}"
}

autoload -Uz vcs_info
# zstyle ':vcs_info:*+*:*' debug true
zstyle ':vcs_info:*' enable git

setopt prompt_subst
zstyle ':vcs_info:git:*' check-for-changes true
# zstyle ':vcs_info:*'    formats "%f[%%n@%%m %1~] $ " "%f%a %F{3}%m%u%c %f%b:%r/%S"
zstyle ':vcs_info:*'    formats "%f[%%n@%%m %1~] $ " "%f%a %F{3}%m%u%c %f%b"
zstyle ':vcs_info:*'    nvcsformats   "%f[%n@%m %1~]$ " ""
zstyle ':vcs_info:*'    actionformats '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '

# export PROMPT='${vcs_info_msg_0_}'

export PROMPT=$'$(directory_name)%{$fg_bold[cyan]%}${vcs_info_msg_1_}%{$reset_color%} ${kube_ps1}$ '

precmd() {
  vcs_info
  # Set title to current working directory; see man zshmisc for details
  # on how %~ is expanded.
  print -Pn "\e]0;%~\a"
}
#compdef gt
###-begin-gt-completions-###
#
# yargs command completion script
#
# Installation: /opt/homebrew/bin/gt completion >> ~/.zshrc
#    or /opt/homebrew/bin/gt completion >> ~/.zprofile on OSX.
#
_gt_yargs_completions()
{
  local reply
  local si=$IFS
  IFS=$'
' reply=($(COMP_CWORD="$((CURRENT-1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" /opt/homebrew/bin/gt --get-yargs-completions "${words[@]}"))
  IFS=$si
  _describe 'values' reply
}
compdef _gt_yargs_completions gt
###-end-gt-completions-###

export PATH="/opt/homebrew/sbin:$PATH"
